(wx["webpackJsonp"] = wx["webpackJsonp"] || []).push([["vendors-node_modules_taro_weapp_prebundle_tarojs-router-next_js"],{

/***/ "./node_modules/.taro/weapp/prebundle/tarojs-router-next.core.js":
/*!***********************************************************************!*\
  !*** ./node_modules/.taro/weapp/prebundle/tarojs-router-next.core.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _chunk_Z3B2LDVB_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-Z3B2LDVB.js */ "./node_modules/.taro/weapp/prebundle/chunk-Z3B2LDVB.js");
/* harmony import */ var _chunk_E2COQYTW_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-E2COQYTW.js */ "./node_modules/.taro/weapp/prebundle/chunk-E2COQYTW.js");
/* harmony import */ var _chunk_YYBYWJJX_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-YYBYWJJX.js */ "./node_modules/.taro/weapp/prebundle/chunk-YYBYWJJX.js");
/* harmony import */ var _chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-P7VEE7PG.js */ "./node_modules/.taro/weapp/prebundle/chunk-P7VEE7PG.js");
/* provided dependency */ var document = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-E2COQYTW.js */ "./node_modules/.taro/weapp/prebundle/chunk-E2COQYTW.js")["document$1"];




// node_modules/tarojs-router-next/dist/exception/no-page.js
var require_no_page = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/exception/no-page.js" (exports) {
        "use strict";
        var __extends = exports && exports.__extends || function() {
            var extendStatics = function(d, b) {
                extendStatics = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(d2, b2) {
                    d2.__proto__ = b2;
                } || function(d2, b2) {
                    for(var p in b2)if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
                };
                return extendStatics(d, b);
            };
            return function(d, b) {
                if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.NoPageException = void 0;
        var NoPageException = function(_super) {
            __extends(NoPageException2, _super);
            function NoPageException2() {
                return _super.call(this, "\u6CA1\u6709\u9875\u9762\u53EF\u4EE5\u56DE\u9000\u4E86") || this;
            }
            return NoPageException2;
        }(Error);
        exports.NoPageException = NoPageException;
    }
});
// node_modules/tarojs-router-next/dist/exception/index.js
var require_exception = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/exception/index.js" (exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.NoPageException = void 0;
        var no_page_1 = require_no_page();
        Object.defineProperty(exports, "NoPageException", {
            enumerable: true,
            get: function() {
                return no_page_1.NoPageException;
            }
        });
    }
});
// node_modules/tarojs-router-next/dist/lib/compose.js
var require_compose = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/lib/compose.js" (exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.compose = void 0;
        function compose(middleware) {
            if (!Array.isArray(middleware)) throw new TypeError("Middleware stack must be an array!");
            for(var _i = 0, middleware_1 = middleware; _i < middleware_1.length; _i++){
                var fn = middleware_1[_i];
                if (typeof fn !== "function") throw new TypeError("Middleware must be composed of functions!");
            }
            return function(context, next) {
                var index = -1;
                return dispatch(0);
                function dispatch(i) {
                    if (i <= index) return Promise.reject(new Error("next() called multiple times"));
                    index = i;
                    var fn2 = middleware[i];
                    if (i === middleware.length) fn2 = next;
                    if (!fn2) return Promise.resolve();
                    try {
                        return Promise.resolve(fn2(context, dispatch.bind(null, i + 1)));
                    } catch (err) {
                        return Promise.reject(err);
                    }
                }
            };
        }
        exports.compose = compose;
    }
});
// node_modules/tarojs-router-next/dist/middleware/index.js
var require_middleware = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/middleware/index.js" (exports) {
        "use strict";
        var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
            function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                    resolve(value);
                });
            }
            return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                    try {
                        step(generator.next(value));
                    } catch (e) {
                        reject(e);
                    }
                }
                function rejected(value) {
                    try {
                        step(generator["throw"](value));
                    } catch (e) {
                        reject(e);
                    }
                }
                function step(result) {
                    result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
            });
        };
        var __generator = exports && exports.__generator || function(thisArg, body) {
            var _ = {
                label: 0,
                sent: function() {
                    if (t[0] & 1) throw t[1];
                    return t[1];
                },
                trys: [],
                ops: []
            }, f, y, t, g;
            return g = {
                next: verb(0),
                "throw": verb(1),
                "return": verb(2)
            }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
                return this;
            }), g;
            function verb(n) {
                return function(v) {
                    return step([
                        n,
                        v
                    ]);
                };
            }
            function step(op) {
                if (f) throw new TypeError("Generator is already executing.");
                while(_)try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                    if (y = 0, t) op = [
                        op[0] & 2,
                        t.value
                    ];
                    switch(op[0]){
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return {
                                value: op[1],
                                done: false
                            };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [
                                0
                            ];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2]) _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                } catch (e) {
                    op = [
                        6,
                        e
                    ];
                    y = 0;
                } finally{
                    f = t = 0;
                }
                if (op[0] & 5) throw op[1];
                return {
                    value: op[0] ? op[1] : void 0,
                    done: true
                };
            }
        };
        var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
            if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
                if (ar || !(i in from)) {
                    if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
            return to.concat(ar || Array.prototype.slice.call(from));
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.execMiddlewares = exports.getMiddlewares = exports.registerMiddlewares = exports.registerMiddleware = exports.middlewareCollection = void 0;
        var compose_1 = require_compose();
        exports.middlewareCollection = [];
        function registerMiddleware(middleware, condition) {
            exports.middlewareCollection.push({
                middlewares: [
                    middleware
                ],
                condition
            });
        }
        exports.registerMiddleware = registerMiddleware;
        function registerMiddlewares(middlewares, condition) {
            exports.middlewareCollection.push({
                middlewares,
                condition
            });
        }
        exports.registerMiddlewares = registerMiddlewares;
        function getMiddlewares(ctx) {
            return exports.middlewareCollection.filter(function(mc) {
                if (!mc.condition) return true;
                else return mc.condition(ctx);
            }).map(function(mc) {
                return mc.middlewares;
            }).reduce(function(pre, cur) {
                return __spreadArray(__spreadArray([], pre, true), cur, true);
            }, []);
        }
        exports.getMiddlewares = getMiddlewares;
        function execMiddlewares(middlewares, ctx) {
            return __awaiter(this, void 0, void 0, function() {
                var fn;
                return __generator(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            fn = (0, compose_1.compose)(middlewares);
                            return [
                                4,
                                fn(ctx)
                            ];
                        case 1:
                            return [
                                2,
                                _a.sent()
                            ];
                    }
                });
            });
        }
        exports.execMiddlewares = execMiddlewares;
    }
});
// node_modules/tarojs-router-next/dist/constants.js
var require_constants = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/constants.js" (exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.isBrowser = exports.ROUTE_KEY = void 0;
        exports.ROUTE_KEY = "route_key";
        exports.isBrowser = typeof document !== "undefined" && !!document.scripts;
    }
});
// node_modules/strict-uri-encode/index.js
var require_strict_uri_encode = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/strict-uri-encode/index.js" (exports, module) {
        "use strict";
        module.exports = (str)=>encodeURIComponent(str).replace(/[!'()*]/g, (x)=>`%${x.charCodeAt(0).toString(16).toUpperCase()}`);
    }
});
// node_modules/decode-uri-component/index.js
var require_decode_uri_component = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/decode-uri-component/index.js" (exports, module) {
        "use strict";
        var token = "%[a-f0-9]{2}";
        var singleMatcher = new RegExp("(" + token + ")|([^%]+?)", "gi");
        var multiMatcher = new RegExp("(" + token + ")+", "gi");
        function decodeComponents(components, split) {
            try {
                return [
                    decodeURIComponent(components.join(""))
                ];
            } catch (err) {}
            if (components.length === 1) {
                return components;
            }
            split = split || 1;
            var left = components.slice(0, split);
            var right = components.slice(split);
            return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
        }
        function decode(input) {
            try {
                return decodeURIComponent(input);
            } catch (err) {
                var tokens = input.match(singleMatcher) || [];
                for(var i = 1; i < tokens.length; i++){
                    input = decodeComponents(tokens, i).join("");
                    tokens = input.match(singleMatcher) || [];
                }
                return input;
            }
        }
        function customDecodeURIComponent(input) {
            var replaceMap = {
                "%FE%FF": "\uFFFD\uFFFD",
                "%FF%FE": "\uFFFD\uFFFD"
            };
            var match = multiMatcher.exec(input);
            while(match){
                try {
                    replaceMap[match[0]] = decodeURIComponent(match[0]);
                } catch (err) {
                    var result = decode(match[0]);
                    if (result !== match[0]) {
                        replaceMap[match[0]] = result;
                    }
                }
                match = multiMatcher.exec(input);
            }
            replaceMap["%C2"] = "\uFFFD";
            var entries = Object.keys(replaceMap);
            for(var i = 0; i < entries.length; i++){
                var key = entries[i];
                input = input.replace(new RegExp(key, "g"), replaceMap[key]);
            }
            return input;
        }
        module.exports = function(encodedURI) {
            if (typeof encodedURI !== "string") {
                throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
            }
            try {
                encodedURI = encodedURI.replace(/\+/g, " ");
                return decodeURIComponent(encodedURI);
            } catch (err) {
                return customDecodeURIComponent(encodedURI);
            }
        };
    }
});
// node_modules/split-on-first/index.js
var require_split_on_first = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/split-on-first/index.js" (exports, module) {
        "use strict";
        module.exports = (string, separator)=>{
            if (!(typeof string === "string" && typeof separator === "string")) {
                throw new TypeError("Expected the arguments to be of type `string`");
            }
            if (separator === "") {
                return [
                    string
                ];
            }
            const separatorIndex = string.indexOf(separator);
            if (separatorIndex === -1) {
                return [
                    string
                ];
            }
            return [
                string.slice(0, separatorIndex),
                string.slice(separatorIndex + separator.length)
            ];
        };
    }
});
// node_modules/filter-obj/index.js
var require_filter_obj = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/filter-obj/index.js" (exports, module) {
        "use strict";
        module.exports = function(obj, predicate) {
            var ret = {};
            var keys = Object.keys(obj);
            var isArr = Array.isArray(predicate);
            for(var i = 0; i < keys.length; i++){
                var key = keys[i];
                var val = obj[key];
                if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {
                    ret[key] = val;
                }
            }
            return ret;
        };
    }
});
// node_modules/query-string/index.js
var require_query_string = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/query-string/index.js" (exports) {
        "use strict";
        var strictUriEncode = require_strict_uri_encode();
        var decodeComponent = require_decode_uri_component();
        var splitOnFirst = require_split_on_first();
        var filterObject = require_filter_obj();
        var isNullOrUndefined = (value)=>value === null || value === void 0;
        var encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
        function encoderForArrayFormat(options) {
            switch(options.arrayFormat){
                case "index":
                    return (key)=>(result, value)=>{
                            const index = result.length;
                            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
                                return result;
                            }
                            if (value === null) {
                                return [
                                    ...result,
                                    [
                                        encode(key, options),
                                        "[",
                                        index,
                                        "]"
                                    ].join("")
                                ];
                            }
                            return [
                                ...result,
                                [
                                    encode(key, options),
                                    "[",
                                    encode(index, options),
                                    "]=",
                                    encode(value, options)
                                ].join("")
                            ];
                        };
                case "bracket":
                    return (key)=>(result, value)=>{
                            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
                                return result;
                            }
                            if (value === null) {
                                return [
                                    ...result,
                                    [
                                        encode(key, options),
                                        "[]"
                                    ].join("")
                                ];
                            }
                            return [
                                ...result,
                                [
                                    encode(key, options),
                                    "[]=",
                                    encode(value, options)
                                ].join("")
                            ];
                        };
                case "colon-list-separator":
                    return (key)=>(result, value)=>{
                            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
                                return result;
                            }
                            if (value === null) {
                                return [
                                    ...result,
                                    [
                                        encode(key, options),
                                        ":list="
                                    ].join("")
                                ];
                            }
                            return [
                                ...result,
                                [
                                    encode(key, options),
                                    ":list=",
                                    encode(value, options)
                                ].join("")
                            ];
                        };
                case "comma":
                case "separator":
                case "bracket-separator":
                    {
                        const keyValueSep = options.arrayFormat === "bracket-separator" ? "[]=" : "=";
                        return (key)=>(result, value)=>{
                                if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
                                    return result;
                                }
                                value = value === null ? "" : value;
                                if (result.length === 0) {
                                    return [
                                        [
                                            encode(key, options),
                                            keyValueSep,
                                            encode(value, options)
                                        ].join("")
                                    ];
                                }
                                return [
                                    [
                                        result,
                                        encode(value, options)
                                    ].join(options.arrayFormatSeparator)
                                ];
                            };
                    }
                default:
                    return (key)=>(result, value)=>{
                            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
                                return result;
                            }
                            if (value === null) {
                                return [
                                    ...result,
                                    encode(key, options)
                                ];
                            }
                            return [
                                ...result,
                                [
                                    encode(key, options),
                                    "=",
                                    encode(value, options)
                                ].join("")
                            ];
                        };
            }
        }
        function parserForArrayFormat(options) {
            let result;
            switch(options.arrayFormat){
                case "index":
                    return (key, value, accumulator)=>{
                        result = /\[(\d*)\]$/.exec(key);
                        key = key.replace(/\[\d*\]$/, "");
                        if (!result) {
                            accumulator[key] = value;
                            return;
                        }
                        if (accumulator[key] === void 0) {
                            accumulator[key] = {};
                        }
                        accumulator[key][result[1]] = value;
                    };
                case "bracket":
                    return (key, value, accumulator)=>{
                        result = /(\[\])$/.exec(key);
                        key = key.replace(/\[\]$/, "");
                        if (!result) {
                            accumulator[key] = value;
                            return;
                        }
                        if (accumulator[key] === void 0) {
                            accumulator[key] = [
                                value
                            ];
                            return;
                        }
                        accumulator[key] = [].concat(accumulator[key], value);
                    };
                case "colon-list-separator":
                    return (key, value, accumulator)=>{
                        result = /(:list)$/.exec(key);
                        key = key.replace(/:list$/, "");
                        if (!result) {
                            accumulator[key] = value;
                            return;
                        }
                        if (accumulator[key] === void 0) {
                            accumulator[key] = [
                                value
                            ];
                            return;
                        }
                        accumulator[key] = [].concat(accumulator[key], value);
                    };
                case "comma":
                case "separator":
                    return (key, value, accumulator)=>{
                        const isArray = typeof value === "string" && value.includes(options.arrayFormatSeparator);
                        const isEncodedArray = typeof value === "string" && !isArray && decode(value, options).includes(options.arrayFormatSeparator);
                        value = isEncodedArray ? decode(value, options) : value;
                        const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item)=>decode(item, options)) : value === null ? value : decode(value, options);
                        accumulator[key] = newValue;
                    };
                case "bracket-separator":
                    return (key, value, accumulator)=>{
                        const isArray = /(\[\])$/.test(key);
                        key = key.replace(/\[\]$/, "");
                        if (!isArray) {
                            accumulator[key] = value ? decode(value, options) : value;
                            return;
                        }
                        const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item)=>decode(item, options));
                        if (accumulator[key] === void 0) {
                            accumulator[key] = arrayValue;
                            return;
                        }
                        accumulator[key] = [].concat(accumulator[key], arrayValue);
                    };
                default:
                    return (key, value, accumulator)=>{
                        if (accumulator[key] === void 0) {
                            accumulator[key] = value;
                            return;
                        }
                        accumulator[key] = [].concat(accumulator[key], value);
                    };
            }
        }
        function validateArrayFormatSeparator(value) {
            if (typeof value !== "string" || value.length !== 1) {
                throw new TypeError("arrayFormatSeparator must be single character string");
            }
        }
        function encode(value, options) {
            if (options.encode) {
                return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
            }
            return value;
        }
        function decode(value, options) {
            if (options.decode) {
                return decodeComponent(value);
            }
            return value;
        }
        function keysSorter(input) {
            if (Array.isArray(input)) {
                return input.sort();
            }
            if (typeof input === "object") {
                return keysSorter(Object.keys(input)).sort((a, b)=>Number(a) - Number(b)).map((key)=>input[key]);
            }
            return input;
        }
        function removeHash(input) {
            const hashStart = input.indexOf("#");
            if (hashStart !== -1) {
                input = input.slice(0, hashStart);
            }
            return input;
        }
        function getHash(url) {
            let hash = "";
            const hashStart = url.indexOf("#");
            if (hashStart !== -1) {
                hash = url.slice(hashStart);
            }
            return hash;
        }
        function extract(input) {
            input = removeHash(input);
            const queryStart = input.indexOf("?");
            if (queryStart === -1) {
                return "";
            }
            return input.slice(queryStart + 1);
        }
        function parseValue(value, options) {
            if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === "string" && value.trim() !== "") {
                value = Number(value);
            } else if (options.parseBooleans && value !== null && (value.toLowerCase() === "true" || value.toLowerCase() === "false")) {
                value = value.toLowerCase() === "true";
            }
            return value;
        }
        function parse(query, options) {
            options = Object.assign({
                decode: true,
                sort: true,
                arrayFormat: "none",
                arrayFormatSeparator: ",",
                parseNumbers: false,
                parseBooleans: false
            }, options);
            validateArrayFormatSeparator(options.arrayFormatSeparator);
            const formatter = parserForArrayFormat(options);
            const ret = /* @__PURE__ */ Object.create(null);
            if (typeof query !== "string") {
                return ret;
            }
            query = query.trim().replace(/^[?#&]/, "");
            if (!query) {
                return ret;
            }
            for (const param of query.split("&")){
                if (param === "") {
                    continue;
                }
                let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
                value = value === void 0 ? null : [
                    "comma",
                    "separator",
                    "bracket-separator"
                ].includes(options.arrayFormat) ? value : decode(value, options);
                formatter(decode(key, options), value, ret);
            }
            for (const key of Object.keys(ret)){
                const value = ret[key];
                if (typeof value === "object" && value !== null) {
                    for (const k of Object.keys(value)){
                        value[k] = parseValue(value[k], options);
                    }
                } else {
                    ret[key] = parseValue(value, options);
                }
            }
            if (options.sort === false) {
                return ret;
            }
            return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key)=>{
                const value = ret[key];
                if (Boolean(value) && typeof value === "object" && !Array.isArray(value)) {
                    result[key] = keysSorter(value);
                } else {
                    result[key] = value;
                }
                return result;
            }, /* @__PURE__ */ Object.create(null));
        }
        exports.extract = extract;
        exports.parse = parse;
        exports.stringify = (object, options)=>{
            if (!object) {
                return "";
            }
            options = Object.assign({
                encode: true,
                strict: true,
                arrayFormat: "none",
                arrayFormatSeparator: ","
            }, options);
            validateArrayFormatSeparator(options.arrayFormatSeparator);
            const shouldFilter = (key)=>options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === "";
            const formatter = encoderForArrayFormat(options);
            const objectCopy = {};
            for (const key of Object.keys(object)){
                if (!shouldFilter(key)) {
                    objectCopy[key] = object[key];
                }
            }
            const keys = Object.keys(objectCopy);
            if (options.sort !== false) {
                keys.sort(options.sort);
            }
            return keys.map((key)=>{
                const value = object[key];
                if (value === void 0) {
                    return "";
                }
                if (value === null) {
                    return encode(key, options);
                }
                if (Array.isArray(value)) {
                    if (value.length === 0 && options.arrayFormat === "bracket-separator") {
                        return encode(key, options) + "[]";
                    }
                    return value.reduce(formatter(key), []).join("&");
                }
                return encode(key, options) + "=" + encode(value, options);
            }).filter((x)=>x.length > 0).join("&");
        };
        exports.parseUrl = (url, options)=>{
            options = Object.assign({
                decode: true
            }, options);
            const [url_, hash] = splitOnFirst(url, "#");
            return Object.assign({
                url: url_.split("?")[0] || "",
                query: parse(extract(url), options)
            }, options && options.parseFragmentIdentifier && hash ? {
                fragmentIdentifier: decode(hash, options)
            } : {});
        };
        exports.stringifyUrl = (object, options)=>{
            options = Object.assign({
                encode: true,
                strict: true,
                [encodeFragmentIdentifier]: true
            }, options);
            const url = removeHash(object.url).split("?")[0] || "";
            const queryFromUrl = exports.extract(object.url);
            const parsedQueryFromUrl = exports.parse(queryFromUrl, {
                sort: false
            });
            const query = Object.assign(parsedQueryFromUrl, object.query);
            let queryString = exports.stringify(query, options);
            if (queryString) {
                queryString = `?${queryString}`;
            }
            let hash = getHash(object.url);
            if (object.fragmentIdentifier) {
                hash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
            }
            return `${url}${queryString}${hash}`;
        };
        exports.pick = (input, filter, options)=>{
            options = Object.assign({
                parseFragmentIdentifier: true,
                [encodeFragmentIdentifier]: false
            }, options);
            const { url , query , fragmentIdentifier  } = exports.parseUrl(input, options);
            return exports.stringifyUrl({
                url,
                query: filterObject(query, filter),
                fragmentIdentifier
            }, options);
        };
        exports.exclude = (input, filter, options)=>{
            const exclusionFilter = Array.isArray(filter) ? (key)=>!filter.includes(key) : (key, value)=>!filter(key, value);
            return exports.pick(input, exclusionFilter, options);
        };
    }
});
// node_modules/tarojs-router-next/dist/func/formatPath.js
var require_formatPath = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/func/formatPath.js" (exports) {
        "use strict";
        var __importDefault = exports && exports.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                "default": mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.formatPath = void 0;
        var query_string_1 = __importDefault(require_query_string());
        function formatPath(route, params) {
            var url = route.url;
            var urlSplit = url.split("?");
            if (urlSplit.length > 1 && urlSplit[1]) {
                var urlParams = query_string_1.default.parse(url.split("?")[1]);
                params = Object.assign(urlParams, params);
                url = urlSplit[0];
            }
            var paramsStr = query_string_1.default.stringify(params, {
                encode: false
            });
            url = "".concat(url, "?").concat(paramsStr);
            return url;
        }
        exports.formatPath = formatPath;
    }
});
// node_modules/tarojs-router-next/dist/func/getCurrentRouteKey.js
var require_getCurrentRouteKey = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/func/getCurrentRouteKey.js" (exports) {
        "use strict";
        var __importDefault = exports && exports.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                "default": mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.getCurrentRouteKey = void 0;
        var taro_1 = __importDefault((0,_chunk_Z3B2LDVB_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
        var constants_1 = require_constants();
        function getCurrentRouteKey() {
            if (!taro_1.default.Current.page) {
                return "";
            }
            return taro_1.default.Current.page[constants_1.ROUTE_KEY];
        }
        exports.getCurrentRouteKey = getCurrentRouteKey;
    }
});
// node_modules/tarojs-router-next/dist/func/isNil.js
var require_isNil = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/func/isNil.js" (exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.isNil = void 0;
        function isNil(val) {
            return val === void 0 || val === null;
        }
        exports.isNil = isNil;
    }
});
// node_modules/tarojs-router-next/dist/func/index.js
var require_func = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/func/index.js" (exports) {
        "use strict";
        var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
            if (k2 === void 0) k2 = k;
            Object.defineProperty(o, k2, {
                enumerable: true,
                get: function() {
                    return m[k];
                }
            });
        } : function(o, m, k, k2) {
            if (k2 === void 0) k2 = k;
            o[k2] = m[k];
        });
        var __exportStar = exports && exports.__exportStar || function(m, exports2) {
            for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        __exportStar(require_formatPath(), exports);
        __exportStar(require_getCurrentRouteKey(), exports);
        __exportStar(require_isNil(), exports);
    }
});
// node_modules/tarojs-router-next/dist/page-data/index.js
var require_page_data = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/page-data/index.js" (exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.PageData = void 0;
        var func_1 = require_func();
        var PageData = function() {
            function PageData2() {}
            PageData2.getPageData = function(default_value) {
                var route_key = (0, func_1.getCurrentRouteKey)();
                var result = PageData2.pageData.get(route_key) || default_value;
                return result;
            };
            PageData2.delPageData = function(route_key) {
                PageData2.pageData.delete(route_key);
            };
            PageData2.delPagePromise = function(route_key) {
                PageData2.pagePromise.delete(route_key);
            };
            PageData2.setPageData = function(route_key, data) {
                this.pageData.set(route_key, data);
            };
            PageData2.setPagePromise = function(route_key, options) {
                this.pagePromise.set(route_key, options);
            };
            PageData2.emitBack = function(route_key) {
                var pme = PageData2.pagePromise.get(route_key);
                if (!pme) return;
                var result = PageData2.backResult.get(route_key);
                PageData2.delPageData(route_key);
                PageData2.delPagePromise(route_key);
                if (result) {
                    PageData2.backResult.delete(route_key);
                    if (result instanceof Error) {
                        pme.rej(result);
                    } else {
                        pme.res(result);
                    }
                } else {
                    pme.res(null);
                }
            };
            PageData2.setBackResult = function(result) {
                var route_key = (0, func_1.getCurrentRouteKey)();
                PageData2.backResult.set(route_key, result);
            };
            PageData2.pageData = /* @__PURE__ */ new Map();
            PageData2.pagePromise = /* @__PURE__ */ new Map();
            PageData2.backResult = /* @__PURE__ */ new Map();
            return PageData2;
        }();
        exports.PageData = PageData;
    }
});
// node_modules/tarojs-router-next/dist/router-back-listener/index.js
var require_router_back_listener = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/router-back-listener/index.js" (exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.execRouterBackListener = exports.registerRouterBackListener = exports.routerBackListenerCollection = void 0;
        var taro_1 = (0,_chunk_Z3B2LDVB_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)();
        exports.routerBackListenerCollection = [];
        function registerRouterBackListener(listener) {
            exports.routerBackListenerCollection.push(listener);
        }
        exports.registerRouterBackListener = registerRouterBackListener;
        function execRouterBackListener(from) {
            var _a;
            var to = {
                url: ((_a = taro_1.Current.router) === null || _a === void 0 ? void 0 : _a.path) || ""
            };
            for(var _i = 0, routerBackListenerCollection_1 = exports.routerBackListenerCollection; _i < routerBackListenerCollection_1.length; _i++){
                var listener = routerBackListenerCollection_1[_i];
                listener(to, from);
            }
        }
        exports.execRouterBackListener = execRouterBackListener;
    }
});
// node_modules/tarojs-router-next/dist/router/type.js
var require_type = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/router/type.js" (exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.NavigateType = void 0;
        var NavigateType;
        (function(NavigateType2) {
            NavigateType2["navigateTo"] = "navigateTo";
            NavigateType2["redirectTo"] = "redirectTo";
            NavigateType2["reLaunch"] = "reLaunch";
            NavigateType2["switchTab"] = "switchTab";
        })(NavigateType = exports.NavigateType || (exports.NavigateType = {}));
    }
});
// node_modules/tarojs-router-next/dist/router/index.js
var require_router = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/router/index.js" (exports) {
        "use strict";
        var __assign = exports && exports.__assign || function() {
            __assign = Object.assign || function(t) {
                for(var s, i = 1, n = arguments.length; i < n; i++){
                    s = arguments[i];
                    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                }
                return t;
            };
            return __assign.apply(this, arguments);
        };
        var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
            if (k2 === void 0) k2 = k;
            var desc = Object.getOwnPropertyDescriptor(m, k);
            if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
                desc = {
                    enumerable: true,
                    get: function() {
                        return m[k];
                    }
                };
            }
            Object.defineProperty(o, k2, desc);
        } : function(o, m, k, k2) {
            if (k2 === void 0) k2 = k;
            o[k2] = m[k];
        });
        var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
            Object.defineProperty(o, "default", {
                enumerable: true,
                value: v
            });
        } : function(o, v) {
            o["default"] = v;
        });
        var __importStar = exports && exports.__importStar || function(mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null) {
                for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
            }
            __setModuleDefault(result, mod);
            return result;
        };
        var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
            function adopt(value) {
                return value instanceof P ? value : new P(function(resolve) {
                    resolve(value);
                });
            }
            return new (P || (P = Promise))(function(resolve, reject) {
                function fulfilled(value) {
                    try {
                        step(generator.next(value));
                    } catch (e) {
                        reject(e);
                    }
                }
                function rejected(value) {
                    try {
                        step(generator["throw"](value));
                    } catch (e) {
                        reject(e);
                    }
                }
                function step(result) {
                    result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
            });
        };
        var __generator = exports && exports.__generator || function(thisArg, body) {
            var _ = {
                label: 0,
                sent: function() {
                    if (t[0] & 1) throw t[1];
                    return t[1];
                },
                trys: [],
                ops: []
            }, f, y, t, g;
            return g = {
                next: verb(0),
                "throw": verb(1),
                "return": verb(2)
            }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
                return this;
            }), g;
            function verb(n) {
                return function(v) {
                    return step([
                        n,
                        v
                    ]);
                };
            }
            function step(op) {
                if (f) throw new TypeError("Generator is already executing.");
                while(_)try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                    if (y = 0, t) op = [
                        op[0] & 2,
                        t.value
                    ];
                    switch(op[0]){
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return {
                                value: op[1],
                                done: false
                            };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [
                                0
                            ];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2]) _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                } catch (e) {
                    op = [
                        6,
                        e
                    ];
                    y = 0;
                } finally{
                    f = t = 0;
                }
                if (op[0] & 5) throw op[1];
                return {
                    value: op[0] ? op[1] : void 0,
                    done: true
                };
            }
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.Router = exports.NavigateType = void 0;
        var taro_1 = __importStar((0,_chunk_Z3B2LDVB_js__WEBPACK_IMPORTED_MODULE_0__.require_taro)());
        var constants_1 = require_constants();
        var no_page_1 = require_no_page();
        var func_1 = require_func();
        var middleware_1 = require_middleware();
        var page_data_1 = require_page_data();
        var router_back_listener_1 = require_router_back_listener();
        var type_1 = require_type();
        var type_2 = require_type();
        Object.defineProperty(exports, "NavigateType", {
            enumerable: true,
            get: function() {
                return type_2.NavigateType;
            }
        });
        var Router = function() {
            function Router2() {}
            Router2.navigate = function(route, options) {
                return __awaiter(this, void 0, void 0, function() {
                    var route_key, context, middlewares, url;
                    var _this = this;
                    return __generator(this, function(_a) {
                        options = __assign({
                            type: type_1.NavigateType.navigateTo,
                            params: {}
                        }, options);
                        options.params = Object.assign({}, options.params);
                        route_key = Date.now() + "";
                        taro_1.Current["_page"] = taro_1.Current.page;
                        Object.defineProperties(taro_1.Current, {
                            page: {
                                set: function(page) {
                                    if (page === void 0 || page === null) {
                                        this._page = page;
                                        return;
                                    }
                                    if (!page[constants_1.ROUTE_KEY]) {
                                        var originOnUnload_1 = page.onUnload;
                                        page.onUnload = function() {
                                            originOnUnload_1 && originOnUnload_1.apply(this);
                                            page_data_1.PageData.emitBack(route_key);
                                            setTimeout(function() {
                                                return (0, router_back_listener_1.execRouterBackListener)(route);
                                            });
                                        };
                                        page[constants_1.ROUTE_KEY] = route_key;
                                    }
                                    this._page = page;
                                },
                                get: function() {
                                    return this._page;
                                }
                            }
                        });
                        if (options.data) {
                            page_data_1.PageData.setPageData(route_key, options.data);
                        }
                        context = {
                            route,
                            type: options.type,
                            params: options.params,
                            data: options.data
                        };
                        middlewares = (0, middleware_1.getMiddlewares)(context);
                        url = (0, func_1.formatPath)(route, options.params);
                        middlewares.push(function(ctx, next) {
                            return __awaiter(_this, void 0, void 0, function() {
                                var _a2;
                                return __generator(this, function(_b) {
                                    switch(_b.label){
                                        case 0:
                                            _a2 = options.type;
                                            switch(_a2){
                                                case type_1.NavigateType.reLaunch:
                                                    return [
                                                        3,
                                                        1
                                                    ];
                                                case type_1.NavigateType.redirectTo:
                                                    return [
                                                        3,
                                                        3
                                                    ];
                                                case type_1.NavigateType.switchTab:
                                                    return [
                                                        3,
                                                        5
                                                    ];
                                            }
                                            return [
                                                3,
                                                7
                                            ];
                                        case 1:
                                            return [
                                                4,
                                                taro_1.default.reLaunch({
                                                    url
                                                })
                                            ];
                                        case 2:
                                            _b.sent();
                                            return [
                                                3,
                                                9
                                            ];
                                        case 3:
                                            return [
                                                4,
                                                taro_1.default.redirectTo({
                                                    url
                                                })
                                            ];
                                        case 4:
                                            _b.sent();
                                            return [
                                                3,
                                                9
                                            ];
                                        case 5:
                                            return [
                                                4,
                                                taro_1.default.switchTab({
                                                    url
                                                })
                                            ];
                                        case 6:
                                            _b.sent();
                                            return [
                                                3,
                                                9
                                            ];
                                        case 7:
                                            return [
                                                4,
                                                taro_1.default.navigateTo({
                                                    url
                                                })
                                            ];
                                        case 8:
                                            _b.sent();
                                            return [
                                                3,
                                                9
                                            ];
                                        case 9:
                                            next();
                                            return [
                                                2
                                            ];
                                    }
                                });
                            });
                        });
                        return [
                            2,
                            new Promise(function(res, rej) {
                                return __awaiter(_this, void 0, void 0, function() {
                                    var err_1;
                                    return __generator(this, function(_a2) {
                                        switch(_a2.label){
                                            case 0:
                                                _a2.trys.push([
                                                    0,
                                                    2,
                                                    ,
                                                    3
                                                ]);
                                                page_data_1.PageData.setPagePromise(route_key, {
                                                    res,
                                                    rej
                                                });
                                                return [
                                                    4,
                                                    (0, middleware_1.execMiddlewares)(middlewares, context)
                                                ];
                                            case 1:
                                                _a2.sent();
                                                return [
                                                    3,
                                                    3
                                                ];
                                            case 2:
                                                err_1 = _a2.sent();
                                                rej(err_1);
                                                return [
                                                    3,
                                                    3
                                                ];
                                            case 3:
                                                return [
                                                    2
                                                ];
                                        }
                                    });
                                });
                            })
                        ];
                    });
                });
            };
            Router2.back = function(result, options) {
                if (!(0, func_1.isNil)(result)) {
                    page_data_1.PageData.setBackResult(result);
                }
                var currentPages = taro_1.default.getCurrentPages();
                if (currentPages.length > 1) {
                    return taro_1.default.navigateBack(options);
                }
                throw new no_page_1.NoPageException();
            };
            Router2.setBackResult = function(result) {
                page_data_1.PageData.setBackResult(result);
            };
            Router2.getData = function(default_value) {
                return page_data_1.PageData.getPageData(default_value);
            };
            Router2.getParams = function() {
                var _a;
                var instance = (0, taro_1.getCurrentInstance)();
                return Object.assign({}, (_a = instance.router) === null || _a === void 0 ? void 0 : _a.params);
            };
            Router2.toBilibili = function(options) {
                return Router2.navigate({
                    url: "/pages/bilibili/index"
                }, options);
            };
            Router2.toFindPwd = function(options) {
                return Router2.navigate({
                    url: "/pages/find_pwd/index"
                }, options);
            };
            Router2.toGoogle = function(options) {
                return Router2.navigate({
                    url: "/pages/google/index"
                }, options);
            };
            Router2.toLogin = function(options) {
                return Router2.navigate({
                    url: "/pages/login/index"
                }, options);
            };
            Router2.toMine = function(options) {
                return Router2.navigate({
                    url: "/pages/mine/index"
                }, options);
            };
            Router2.toNewsinfo = function(options) {
                return Router2.navigate({
                    url: "/pages/newsinfo/index"
                }, options);
            };
            Router2.toRegister = function(options) {
                return Router2.navigate({
                    url: "/pages/register/index"
                }, options);
            };
            Router2.toSina = function(options) {
                return Router2.navigate({
                    url: "/pages/sina/index"
                }, options);
            };
            return Router2;
        }();
        exports.Router = Router;
    }
});
// node_modules/tarojs-router-next/dist/index.js
var require_dist = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "node_modules/tarojs-router-next/dist/index.js" (exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.registerRouterBackListener = exports.Router = exports.NavigateType = exports.registerMiddlewares = exports.registerMiddleware = exports.getMiddlewares = exports.execMiddlewares = exports.NoPageException = void 0;
        var exception_1 = require_exception();
        Object.defineProperty(exports, "NoPageException", {
            enumerable: true,
            get: function() {
                return exception_1.NoPageException;
            }
        });
        var middleware_1 = require_middleware();
        Object.defineProperty(exports, "execMiddlewares", {
            enumerable: true,
            get: function() {
                return middleware_1.execMiddlewares;
            }
        });
        Object.defineProperty(exports, "getMiddlewares", {
            enumerable: true,
            get: function() {
                return middleware_1.getMiddlewares;
            }
        });
        Object.defineProperty(exports, "registerMiddleware", {
            enumerable: true,
            get: function() {
                return middleware_1.registerMiddleware;
            }
        });
        Object.defineProperty(exports, "registerMiddlewares", {
            enumerable: true,
            get: function() {
                return middleware_1.registerMiddlewares;
            }
        });
        var router_1 = require_router();
        Object.defineProperty(exports, "NavigateType", {
            enumerable: true,
            get: function() {
                return router_1.NavigateType;
            }
        });
        Object.defineProperty(exports, "Router", {
            enumerable: true,
            get: function() {
                return router_1.Router;
            }
        });
        var router_back_listener_1 = require_router_back_listener();
        Object.defineProperty(exports, "registerRouterBackListener", {
            enumerable: true,
            get: function() {
                return router_back_listener_1.registerRouterBackListener;
            }
        });
        var router_2 = require_router();
        exports.default = router_2.Router;
    }
});
// entry:tarojs-router-next
var require_tarojs_router_next = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_3__.__commonJS)({
    "entry:tarojs-router-next" (exports, module) {
        module.exports = require_dist();
    }
});
/* harmony default export */ __webpack_exports__["default"] = (require_tarojs_router_next());


/***/ }),

/***/ "./node_modules/.taro/weapp/prebundle/tarojs-router-next.js":
/*!******************************************************************!*\
  !*** ./node_modules/.taro/weapp/prebundle/tarojs-router-next.js ***!
  \******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

const m = __webpack_require__(/*! ./tarojs-router-next.core.js */ "./node_modules/.taro/weapp/prebundle/tarojs-router-next.core.js")
module.exports = m.default
exports["default"] = module.exports


/***/ })

}]);