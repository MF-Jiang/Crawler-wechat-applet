{"version":3,"file":"pages/register/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9EA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AA0EA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://taro_bilibili/._src_pages_register_index.jsx","webpack://taro_bilibili/./src/pages/register/index.jsx?8006"],"sourcesContent":["import { Component } from 'react'\r\nimport Taro from '@tarojs/taro';\r\nimport {View, Input, Text} from '@tarojs/components'\r\n\r\n\r\nimport './index.scss'\r\nimport {OsCountdown} from \"ossaui\";\r\n\r\nexport default class Index extends Component {\r\n  componentDidMount () { }\r\n\r\n  componentWillUnmount () { }\r\n\r\n  componentDidShow () { }\r\n\r\n  componentDidHide () { }\r\n\r\n  state = {showCd:false}\r\n\r\n  register = () => {\r\n\r\n  }\r\n\r\n  getCode = () => {\r\n\r\n    Taro.request({\r\n      url: 'http://127.0.0.1:5000/api/auth/register/captcha',\r\n      header: {\r\n        'content-type': 'application/json'\r\n      },\r\n      method:\"POST\",\r\n      data:{\r\n        \"email\":this.email.value\r\n      },\r\n      success: (res) => {\r\n\r\n        if(!res.data.ifSuccess){\r\n          Taro.showModal({\r\n            title:'Tip:',\r\n            content:'Please enter the correct email.',\r\n            showCancel:false\r\n          })\r\n        }else{\r\n          this.setState({showCd:true})\r\n        }\r\n        console.log(\"success\",this.state.showCd)\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  submit_Data = () => {\r\n    if (this.password.value !== this.confirm_password.value){\r\n      Taro.showModal({\r\n        title: 'Tips:',\r\n        content: 'Entered passwords differ.',\r\n        showCancel:false,\r\n      })\r\n      return\r\n    }\r\n    Taro.request({\r\n      url: 'http://127.0.0.1:5000/api/auth/register',\r\n      header: {\r\n        'content-type': 'application/json'\r\n      },\r\n      method:\"POST\",\r\n      data:{\r\n        \"username\":this.username.value,\r\n        \"email\":this.email.value,\r\n        \"captcha\":this.code.value,\r\n        \"password\":this.password.value\r\n      },\r\n      success: (res) => {\r\n        if (!res.data.ifSuccess){\r\n          Taro.showModal({\r\n            title: 'Tips:',\r\n            content: res.data.message,\r\n            showCancel:false,\r\n          })\r\n          return\r\n        }\r\n        Taro.navigateTo({\r\n          url: '../login/index'\r\n        })\r\n        console.log(res.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return(\r\n      <View className='content'>\r\n        <View className='row-input'>\r\n          <Text>Username</Text>\r\n          <View className='input-box'>\r\n            <Input placeholder='Enter your username' maxLength='10' ref={c => this.username = c} />\r\n          </View>\r\n        </View>\r\n        <View className='row-input'>\r\n          <Text>Email</Text>\r\n          <View className='input-box'>\r\n            <Input placeholder='Enter your email' style={{\r\n                width: '100%',\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n              }} maxLength='20' ref={c => this.email = c} type='email'\r\n            />\r\n          </View>\r\n        </View>\r\n        <View className='row-input2'>\r\n          <Text>Verification code</Text>\r\n          <View className='input-box2'>\r\n            <Input className='input2' placeholder='Enter the code' maxLength='6' ref={c => this.code = c} />\r\n            {\r\n              !this.state.showCd ?\r\n                <View className='code' onClick={this.getCode}>\r\n                  <Text>CAPTCHA</Text>\r\n                </View>\r\n                :\r\n                <OsCountdown className='cd2' remainTime={60000} onEnd={() => { setTimeout(() => { this.setState({showCd:false}) }, 1000) }}>\r\n                  {f => <View>{Math.round(f.remainTime / 1000)}</View>}\r\n                </OsCountdown>\r\n            }\r\n          </View>\r\n        </View>\r\n        <View className='row-input'>\r\n          <Text>Password</Text>\r\n          <View className='input-box'>\r\n            <Input type='password' placeholder='Enter your password' maxLength='18' ref={c => this.password = c} />\r\n          </View>\r\n        </View>\r\n        <View className='row-input'>\r\n          <Text>Confirm password</Text>\r\n          <View className='input-box'>\r\n            <Input type='password' placeholder='Enter password again' maxLength='18' ref={c => this.confirm_password = c} />\r\n          </View>\r\n        </View>\r\n        <View className='register-btn' onClick={this.submit_Data}>\r\n          Register\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.jsx\"\nvar config = {\"navigationBarTitleText\":\"Register\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/register/index', {root:{cn:[]}}, config || {}))\n\n\n"],"names":[],"sourceRoot":""}