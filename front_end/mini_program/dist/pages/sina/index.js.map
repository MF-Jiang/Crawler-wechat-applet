{"version":3,"file":"pages/sina/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAqcA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAyKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAIA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzUA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://taro_bilibili/._src_pages_sina_index.jsx","webpack://taro_bilibili/._src_components_SinanewsItem_NewsItem.jsx","webpack://taro_bilibili/./src/pages/sina/index.jsx?26cc"],"sourcesContent":["import { Component } from 'react'\r\nimport { View, Text, Picker, Input, Icon, ScrollView, Image } from '@tarojs/components'\r\nimport Taro from \"@tarojs/taro\"\r\nimport { OsSwitch, OsStepper, OsLoading, OsButton } from 'ossaui'\r\nimport { Router } from \"tarojs-router-next\"\r\nimport ReloadIcon from '../../static/reload.png'\r\n\r\nimport './index.scss'\r\nimport NewsItem from '../../components/SinanewsItem/NewsItem'\r\n\r\nexport default class Index extends Component {\r\n\r\n  state = { monitorcheck: false, keyword: '', minutes: 0, hours: 0, days: 0, time: '', run: false, firstuse: true, content: [], loading: false }\r\n\r\n  componentDidMount() {\r\n    const bi = Taro.getStorageSync('State_sina')\r\n    const c = Taro.getStorageSync('Cookies')\r\n    console.log(bi)\r\n    //this.setState({...bi})\r\n    if (bi.run === true){\r\n      Taro.request({\r\n        url: 'http://127.0.0.1:5000/api/sina/extract',\r\n        header: {\r\n          'content-type': 'application/json', // 默认值\r\n          'Cookie':c\r\n        },\r\n        method:\"POST\",\r\n        success: (res) => {\r\n          const new_content = [...res.data.info,...bi.content]\r\n          this.setState({...bi,content:new_content,isLoading:false})\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      this.setState({...bi})\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    Taro.setStorageSync('State_sina', this.state)\r\n  }\r\n\r\n  openmonitor = () => {\r\n    this.setState({ monitorcheck: true })\r\n  }\r\n\r\n  closemonitor = () => {\r\n    if (this.state.keyword === '' && this.keyWordElement.value === '') {\r\n      this.setState({ minutes: 0, hours: 0, days: 0, })\r\n    }\r\n    this.setState({ monitorcheck: false })\r\n  }\r\n\r\n  handleChange(minutes) {\r\n    this.setState({\r\n      minutes\r\n    })\r\n  }\r\n\r\n  handleChange1(hours) {\r\n    this.setState({\r\n      hours\r\n    })\r\n  }\r\n\r\n  handleChange2(days) {\r\n    this.setState({\r\n      days\r\n    })\r\n  }\r\n\r\n  submitmonitor = () => {\r\n    const { minutes, hours, days } = this.state\r\n    if ((days == 0 && hours == 0 && minutes == 0) || (this.keyWordElement.value == '' && this.state.keyword == '')) {\r\n      Taro.showModal({\r\n        title: 'Tips',\r\n        content: 'Please enter a valid time and subject',\r\n        showCancel: false,\r\n      })\r\n      return\r\n    }\r\n\r\n    if (this.keyWordElement.value != this.state.keyword) {\r\n      this.setState({ content: [] })\r\n    }\r\n\r\n    if (this.keyWordElement.value == '') {\r\n      this.keyWordElement.value = this.state.keyword\r\n    }\r\n\r\n    const d = days == 0 ? '' : `${days}d`\r\n    const h = hours == 0 ? '' : `${hours}h`\r\n    const m = minutes == 0 ? '' : `${minutes}mins`\r\n    const new_time = d + h + m\r\n\r\n    this.setState({ keyword: this.keyWordElement.value, time: new_time, run: true, monitorcheck: false, firstuse: false, loading: true })\r\n    const c = Taro.getStorageSync('Cookies')\r\n    Taro.request({\r\n      url: 'http://127.0.0.1:5000/api/sina/start',\r\n      method: \"POST\",\r\n      header: {\r\n        'content-type': 'application/json',\r\n        'Cookie': c\r\n      },\r\n      data: {\r\n        \"start\": true,\r\n        \"topic\": this.keyWordElement.value,\r\n        \"days\": this.state.days,\r\n        \"hours\": this.state.hours,\r\n        \"minutes\": this.state.minutes\r\n      },\r\n      success: () => {\r\n        Taro.request({\r\n          url: 'http://127.0.0.1:5000/api/sina/extract',\r\n          method: \"POST\",\r\n          header: {\r\n            'content-type': 'application/json',\r\n            'Cookie': c\r\n          },\r\n          success: (res) => {\r\n            this.setState({ content: this.state.content.concat(res.data.info), loading: false })\r\n            console.log(res.data.info)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  runChange = () => {\r\n    if ((this.state.keyword == '') || (this.state.time == '')) {\r\n      Taro.showModal({\r\n        title: 'Tips',\r\n        content: 'Please enter a valid time and subject',\r\n        showCancel: false,\r\n      })\r\n      //console.log(this.state.run)\r\n      return\r\n    } else {\r\n      if (this.state.run) {//现在是run要变成不run\r\n        const c = Taro.getStorageSync('Cookies')\r\n        Taro.request({\r\n          url: 'http://127.0.0.1:5000/api/sina/start',\r\n          method: \"POST\",\r\n          header: {\r\n            'content-type': 'application/json',\r\n            'Cookie': c\r\n          },\r\n          data: {\r\n            \"start\": false,\r\n            \"topic\": this.state.keyword,\r\n            \"days\": this.state.days,\r\n            \"hours\": this.state.hours,\r\n            \"minutes\": this.state.minutes\r\n          },\r\n        })\r\n      } else {//现在是不run,重启run\r\n        this.setState({ loading: true })\r\n        const c = Taro.getStorageSync('Cookies')\r\n        Taro.request({\r\n          url: 'http://127.0.0.1:5000/api/sina/start',\r\n          method: \"POST\",\r\n          header: {\r\n            'content-type': 'application/json',\r\n            'Cookie': c\r\n          },\r\n          data: {\r\n            \"start\": true,\r\n            \"topic\": this.state.keyword,\r\n            \"days\": this.state.days,\r\n            \"hours\": this.state.hours,\r\n            \"minutes\": this.state.minutes\r\n          },\r\n          success: () => {\r\n            const c = Taro.getStorageSync('Cookies')\r\n            Taro.request({\r\n              url: 'http://127.0.0.1:5000/api/sina/extract',\r\n              method: \"POST\",\r\n              header: {\r\n                'content-type': 'application/json',\r\n                'Cookie': c\r\n              },\r\n              success: (res) => {\r\n                this.setState({ content: res.data.info, loading: false })\r\n                console.log(res.data.info)\r\n              }\r\n            })\r\n          }\r\n        })\r\n\r\n      }\r\n      this.setState({\r\n        run: !this.state.run\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  newshandleClick = news => {\r\n    const { id, url, news_content, title, media, upload_time } = news\r\n\r\n    Router.navigate(\r\n      { url: '/pages/newsinfo/news' },\r\n      {\r\n        // url 参数，自动拼接\r\n        params: { id: id, url: url, title: title, upload_time: upload_time, media: media },\r\n        // 可携带其他数据，任意类型\r\n        data: news_content,\r\n      }\r\n    )\r\n  }\r\n\r\n  reloadData = () => {\r\n    if (this.state.run === false) {\r\n      Taro.showModal({\r\n        title: 'Tips',\r\n        content: 'Please enable monitoring first',\r\n        showCancel: false,\r\n      })\r\n      return\r\n    }\r\n\r\n    this.setState({ loading: true })\r\n    console.log(\"pull down\")\r\n    const c = Taro.getStorageSync('Cookies')\r\n    Taro.request({\r\n      url: 'http://127.0.0.1:5000/api/sina/extract',\r\n      method: \"POST\",\r\n      header: {\r\n        'content-type': 'application/json',\r\n        'Cookie': c\r\n      },\r\n      success: (res) => {\r\n        this.setState({ content: this.state.content.concat(res.data.info), loading: false })\r\n        console.log(res.data.info)\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const scrollTop = 0\r\n    const Threshold = 0\r\n    const scrollStyle = {\r\n      height: '600px',\r\n    }\r\n\r\n    return (\r\n      <View>\r\n        <View className='formationbox'>\r\n          <View className='SinaPart'>\r\n            <OsSwitch className='s1' color='blue' checked={this.state.run} onChange={this.runChange}></OsSwitch>\r\n            <OsButton disabled={this.state.run} shape='round' bdColor='#00FFFF' bgColor='#00FFFF'\r\n              onClick={this.openmonitor}\r\n            >{this.state.keyword === '' ? \"New monitor\" : \"Edit monitor\"}</OsButton>\r\n            <View className='topic'>Topic: {this.state.keyword}</View>\r\n            <View className='r_time'>Refresh Interval: {this.state.time}</View>\r\n            {this.state.run && !this.state.loading && (<View className='s2'>\r\n              <Image style='width:25px; height:25px;' onClick={this.reloadData} src={ReloadIcon}></Image>\r\n            </View>)}\r\n          </View>\r\n        </View>\r\n\r\n\r\n\r\n        <View>\r\n          {!this.state.loading && (\r\n            <ScrollView\r\n              className='ScrollView'\r\n              scrollY\r\n              scrollWithAnimation\r\n              scrollTop={scrollTop}\r\n              style={scrollStyle}\r\n              lowerThreshold={Threshold}\r\n              upperThreshold={Threshold}\r\n            // onScrollToUpper={this.reloadData}\r\n            >\r\n              {this.state.firstuse && (<View className='first_text'>Welcome to Sina news monitor!</View>)}\r\n              <View>\r\n                {\r\n                  this.state.content && this.state.content.map(news => <NewsItem key={news.id} news={news} NewsonClick={this.newshandleClick} />)\r\n                }\r\n              </View>\r\n            </ScrollView>\r\n          )}\r\n        </View>\r\n\r\n        {this.state.loading && (\r\n          <OsLoading className='loadingstyle' color='blue' size='100'></OsLoading>\r\n        )}\r\n\r\n        <Picker mode='selector' onChange={this.onOrderChange}>\r\n        </Picker>\r\n        {\r\n          this.state.monitorcheck && (\r\n            <View className='reply-input-wrapper'>\r\n              <View className='t1'>Sina</View>\r\n              <View className='t2' >Topic:</View>\r\n              <Input className='input1' ref={c => this.keyWordElement = c} placeholder={this.state.keyword}></Input>\r\n              <View className='t3' >Refresh Interval:</View>\r\n              <Text>Minutes:</Text>\r\n              <OsStepper\r\n                min={0}\r\n                max={60}\r\n                step={1}\r\n                value={this.state.minutes}\r\n                onChange={this.handleChange.bind(this)}\r\n              ></OsStepper>\r\n              <Text>Hours:</Text>\r\n              <OsStepper\r\n                min={0}\r\n                max={60}\r\n                step={1}\r\n                value={this.state.hours}\r\n                onChange={this.handleChange1.bind(this)}\r\n              ></OsStepper>\r\n              <Text>Days:</Text>\r\n              <OsStepper\r\n                min={0}\r\n                max={365}\r\n                step={1}\r\n                value={this.state.days}\r\n                onChange={this.handleChange2.bind(this)}\r\n              ></OsStepper>\r\n              <OsButton className='b1' onClick={this.closemonitor} shape='round' bdColor='#00FFFF' bgColor='#00FFFF'>Close</OsButton>\r\n              <OsButton className='b2' shape='round' bdColor='#00FFFF' bgColor='#00FFFF' onClick={this.submitmonitor}>Submit</OsButton>\r\n            </View>\r\n          )\r\n        }\r\n      </View>\r\n    )\r\n  }\r\n}\r\n","import { Component } from 'react'\r\nimport { View } from '@tarojs/components'\r\n\r\nimport './NewsItem.scss'\r\n\r\nexport default class NewsItem extends Component {\r\n\r\n    NewsClick = () => {\r\n        const { NewsonClick, news } = this.props\r\n        NewsonClick && NewsonClick(news)\r\n    }\r\n\r\n    render() {\r\n        const { news } = this.props\r\n\r\n        return (\r\n            <View className='NewsItem' onClick={this.NewsClick}>\r\n                <View className='News-title' style='overflow:hidden; white-space:nowrap; text-overflow:ellipsis'>{news.title}</View>\r\n                <View className='News-description' style='overflow:hidden; white-space:nowrap; text-overflow:ellipsis'>{news.news_content}</View>\r\n                <View className='News-data'>{news.media + \" \" + news.upload_time}</View>\r\n            </View>\r\n        )\r\n    }\r\n}","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.jsx\"\nvar config = {\"navigationBarTitleText\":\"Sina News\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/sina/index', {root:{cn:[]}}, config || {}))\n\n\n"],"names":[],"sourceRoot":""}