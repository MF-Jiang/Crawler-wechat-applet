{"version":3,"file":"pages/bilibili/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAquBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAiGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AA0IA;AAAA;AAAA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACpaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://taro_bilibili/._src_pages_bilibili_index.jsx","webpack://taro_bilibili/./src/pages/bilibili/index.jsx?f3b9"],"sourcesContent":["import { Component } from 'react'\r\nimport {Image, Input, Picker, ScrollView, Text, View} from '@tarojs/components'\r\nimport {OsButton, OsSwitch, OsStepper, OsIcon, OsLoading} from 'ossaui'\r\nimport Taro from \"@tarojs/taro\";\r\n\r\nimport './index.scss'\r\nimport ReloadIcon from \"../../static/reload.png\";\r\n\r\n\r\n\r\nconst selector = ['Latest Release','Most Clicks']\r\n\r\nexport default class Index extends Component {\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    const bi = Taro.getStorageSync('State_bi')\r\n    const c = Taro.getStorageSync('Cookies')\r\n    console.log(bi)\r\n    //this.setState({...bi})\r\n    if (bi.v1 === true){\r\n      Taro.request({\r\n        url: 'http://127.0.0.1:5000/api/bilibili/extract',\r\n        header: {\r\n          'content-type': 'application/json', // 默认值\r\n          'Cookie':c\r\n        },\r\n        method:\"POST\",\r\n        success: (res) => {\r\n          console.log(res.data.info)\r\n          const new_content = [...res.data.info,...bi.content]\r\n          this.setState({...bi,content:new_content,isLoading:false})\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      this.setState({...bi})\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    Taro.setStorageSync('State_bi', this.state)\r\n  }\r\n\r\n  componentDidHide() {\r\n  }\r\n\r\n\r\n  state = {v1: false, openToast: false,minutes:0,hours:0,days:0,order:0,keyword:\"\",time:\"\",content:[],isLoading:false,selector:0,isFirst:true}\r\n\r\n  setV1 = (v1) => {\r\n    const {keyword,minutes,hours,days} = this.state\r\n    const c = Taro.getStorageSync('Cookies')\r\n\r\n    if (this.state.keyword === ''){\r\n      Taro.showModal({\r\n        title: 'Tips',\r\n        content: 'Please enter a valid time and subject',\r\n        showCancel:false,\r\n      })\r\n      return\r\n    }\r\n    else {\r\n      this.setState({v1})\r\n    }\r\n    if(this.state.v1 === false){\r\n      console.log(\"111\")\r\n      this.setState({isLoading:true,isFirst:false})\r\n      Taro.request({\r\n        url: 'http://127.0.0.1:5000/api/bilibili/start',\r\n        header: {\r\n          'content-type': 'application/json', // 默认值\r\n          'Cookie':c\r\n        },\r\n        data:{\r\n          \"start\": true,\r\n          \"topic\": keyword,\r\n          \"days\": days,\r\n          \"hours\": hours,\r\n          \"minutes\": minutes\r\n        },\r\n        method:\"POST\",\r\n        success: () => {\r\n          Taro.request({\r\n            url: 'http://127.0.0.1:5000/api/bilibili/extract',\r\n            header: {\r\n              'content-type': 'application/json', // 默认值\r\n              'Cookie':c\r\n            },\r\n            method:\"POST\",\r\n            success: (res) => {\r\n              console.log(res.data.info)\r\n              this.setState({content:res.data.info,isLoading:false})\r\n            }\r\n          })\r\n          console.log(\"success\")\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      Taro.request({\r\n        url: 'http://127.0.0.1:5000/api/bilibili/start',\r\n        header: {\r\n          'content-type': 'application/json', // 默认值\r\n          'Cookie':c\r\n        },\r\n        data:{\r\n          \"start\": false,\r\n          \"topic\": keyword,\r\n          \"days\": days,\r\n          \"hours\": hours,\r\n          \"minutes\": minutes\r\n        },\r\n        method:\"POST\",\r\n        success: () => {\r\n          console.log(\"Quit monitor\")\r\n        }\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  isOpenToast = () => {\r\n    if (this.state.v1 === true){\r\n      Taro.showModal({\r\n        title: 'Tips',\r\n        content: 'Please disable the monitor first',\r\n        showCancel:false,\r\n      })\r\n      return\r\n    }\r\n    this.setState({openToast: true})\r\n  }\r\n\r\n  closeToast = () => {\r\n    this.setState({openToast: false})\r\n  }\r\n\r\n  handleChange (minutes) {\r\n\r\n    this.setState({\r\n      minutes:parseInt(minutes)\r\n    })\r\n  }\r\n\r\n  handleChange1 (hours) {\r\n    this.setState({\r\n      hours:parseInt(hours)\r\n    })\r\n  }\r\n\r\n  handleChange2 (days) {\r\n    this.setState({\r\n      days:parseInt(days)\r\n    })\r\n  }\r\n\r\n  onOrderChange = (evt) => {\r\n\r\n    const {content} = this.state\r\n    if(evt.detail.value === '1'){\r\n      content.sort((a,b) => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        if (!isFinite(a.view_counts)){\r\n          const num = a.view_counts.slice(0,-1)\r\n          a.view_counts = num * 10000\r\n          console.log(a.view_counts)\r\n        }\r\n        else if(!isFinite(b.view_counts)){\r\n          const num = b.view_counts.slice(0,-1)\r\n          b.view_counts = num * 10000\r\n          console.log(b.view_counts)\r\n        }\r\n        return b.view_counts - a.view_counts\r\n      })\r\n      this.setState({selector:1})\r\n    }\r\n    else {\r\n      content.sort((a,b) => {\r\n        return Date.parse(b.upload_time.replace(/-/g, \"/\")) - Date.parse(a.upload_time.replace(/-/g, \"/\"));\r\n      })\r\n      this.setState({selector:0})\r\n    }\r\n\r\n    this.setState({\r\n      order: evt.detail.value,\r\n      content\r\n    })\r\n  }\r\n\r\n  getData = () => {\r\n    console.log(this.state.content)\r\n    if (this.state.v1 === false){\r\n      Taro.showModal({\r\n        title: 'Tips',\r\n        content: 'Please enable the monitor first',\r\n        showCancel:false,\r\n      })\r\n      return\r\n    }\r\n\r\n    const c = Taro.getStorageSync('Cookies')\r\n\r\n    this.setState({isLoading:true})\r\n    Taro.request({\r\n      url: 'http://127.0.0.1:5000/api/bilibili/extract',\r\n      header: {\r\n        'content-type': 'application/json', // 默认值\r\n        'Cookie':c\r\n      },\r\n      method:\"POST\",\r\n      success: (res) => {\r\n        console.log(res.data.info)\r\n        const new_content = [...res.data.info,...this.state.content]\r\n\r\n        if (this.state.selector === 1){\r\n          new_content.sort((a,b) => {\r\n            if (!isFinite(a.view_counts)){\r\n              const num = a.view_counts.slice(0,-1)\r\n              a.view_counts = num * 10000\r\n              console.log(a.view_counts)\r\n            }\r\n            else if(!isFinite(b.view_counts)){\r\n              const num = b.view_counts.slice(0,-1)\r\n              b.view_counts = num * 10000\r\n              console.log(b.view_counts)\r\n            }\r\n            return b.view_counts - a.view_counts\r\n          })\r\n        }\r\n\r\n        console.log(new_content)\r\n        this.setState({content:new_content,isLoading:false})\r\n      }\r\n    })\r\n  }\r\n\r\n  submitData = () => {\r\n    const {minutes,hours,days} = this.state\r\n    if ((!days && !hours && !minutes) || (this.keyWordElement.value === '' && this.state.keyword === '')){\r\n      Taro.showModal({\r\n        title: 'Tips',\r\n        content: 'Please enter a valid time and subject',\r\n        showCancel:false,\r\n      })\r\n      return\r\n    }\r\n\r\n    if (this.keyWordElement.value === ''){\r\n      this.keyWordElement.value = this.state.keyword\r\n    }\r\n\r\n    const d = days === 0 ? '' : `${days}d`\r\n    const h = hours === 0 ? '' : `${hours}h`\r\n    const m = minutes === 0 ? '' : `${minutes}mins`\r\n    const new_time = d+h+m\r\n\r\n    this.setState({keyword:this.keyWordElement.value,openToast: false,time:new_time,isLoading:true,isFirst:false,v1:true})\r\n\r\n    const c = Taro.getStorageSync('Cookies')\r\n    console.log(c)\r\n    Taro.request({\r\n      url: 'http://127.0.0.1:5000/api/bilibili/start',\r\n      header: {\r\n        'content-type': 'application/json',\r\n        'Cookie':c\r\n      },\r\n      data:{\r\n        \"start\": true,\r\n        \"topic\": this.keyWordElement.value,\r\n        \"days\": days,\r\n        \"hours\": hours,\r\n        \"minutes\": minutes\r\n      },\r\n      method:\"POST\",\r\n      success: () => {\r\n        Taro.request({\r\n          url: 'http://127.0.0.1:5000/api/bilibili/extract',\r\n          header: {\r\n            'content-type': 'application/json', // 默认值\r\n            'Cookie':c,\r\n          },\r\n          method:\"POST\",\r\n          success: (res) => {\r\n            console.log(res.data.info)\r\n            this.setState({content:res.data.info,isLoading:false})\r\n          }\r\n        })\r\n        console.log(\"success\")\r\n      }\r\n    })\r\n  }\r\n\r\n  onScrollToUpper() {}\r\n\r\n  open_url_msg  = (url) => {\r\n    return () => {\r\n      Taro.showModal({\r\n        title: 'Kindly Reminder',\r\n        content: 'Due to restrictions on WeChat, please copy the link and open it in your web browser.',\r\n        confirmText:'Copy url',\r\n        cancelText:'Cancel',\r\n        success: function (res) {\r\n          if (res.confirm) {\r\n            Taro.setClipboardData({\r\n              data: url,\r\n              success: (res1) => {\r\n                Taro.getClipboardData({\r\n                  success: (res1) => {\r\n                    console.log(res1.data)\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const scrollStyle = {\r\n      height: '550px'\r\n    }\r\n    const scrollTop = 0\r\n    const Threshold = 20\r\n    return (\r\n      <View className='index'>\r\n        <OsButton shape='round' bdColor='#00FFFF' bgColor='#00FFFF'\r\n          onClick={this.isOpenToast}\r\n        >{this.state.keyword === '' ? \"New monitor\" : \"Edit monitor\"}</OsButton>\r\n        <OsSwitch className='s1' checked={this.state.v1} onChange={this.setV1} onColor='#00FFFF'></OsSwitch>\r\n        <View className='topic'>Topic: {this.state.keyword}</View>\r\n        <View className='r_time'>Refresh Interval: {this.state.time}</View>\r\n        <Picker\r\n          mode='selector'\r\n          range={selector}\r\n          onChange={this.onOrderChange}\r\n          className='pk'\r\n        >\r\n          <View className='order'>{selector[this.state.order]}<OsIcon type='pull-down-big' size={20}></OsIcon></View>\r\n        </Picker>\r\n        {this.state.content.length !== 0 ? <View className='s2'>\r\n          <Image style='width:25px; height:25px;' onClick={this.getData} src={ReloadIcon}></Image>\r\n        </View> : <View />}\r\n        <ScrollView\r\n          className='scrollview'\r\n          scrollY\r\n          scrollWithAnimation\r\n          scrollTop={scrollTop}\r\n          style={scrollStyle}\r\n          lowerThreshold={Threshold}\r\n          upperThreshold={Threshold}\r\n          onScrollToUpper={this.onScrollToUpper.bind(this)} // 使用箭头函数的时候 可以这样写 `onScrollToUpper={this.onScrollToUpper}`\r\n          onScroll={this.onScroll}\r\n        >\r\n\r\n          {this.state.isFirst === true ? <View className='first_text'> Welcome to Bilibili video monitor! </View> : this.state.isLoading === true ? (<OsLoading className='loading_img' size={120} color='blue'></OsLoading>) : this.state.content.length === 0 ? (<View></View>): this.state.content.map((item) => {\r\n            return (\r\n              <View className='li' key={item.id} onClick={this.open_url_msg(item.url)}>\r\n                <Image className='imgA' src={item.image}></Image>\r\n                <View className='video_data'>\r\n                  <View className='video_title'>{item.title}</View>\r\n                  <View className='view_area1'>\r\n                    <OsIcon type='visible' className='view_icon' size={30}></OsIcon>\r\n                    <Text className='view_data'>{item.view_counts}</Text>\r\n                  </View>\r\n                  <View className='view_area2'>\r\n                    <OsIcon className='view_icon' type='user' size={30}></OsIcon>\r\n                    <Text className='view_data'>{item.uploader}</Text>\r\n                    <View className='upload_time'>{item.upload_time}</View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            )\r\n          })}\r\n\r\n        </ScrollView>\r\n        {\r\n          this.state.openToast && (\r\n            <View className='reply-input-wrapper'>\r\n              <View className='t1'>Bilibili</View>\r\n              <View className='t2' >Topic:</View>\r\n              <Input className='input1' ref={c => this.keyWordElement = c} placeholder={this.state.keyword}></Input>\r\n              <View className='t3' >Refresh Interval:</View>\r\n              <Text>Minutes:</Text>\r\n              <OsStepper\r\n                min={0}\r\n                max={60}\r\n                step={1}\r\n                value={this.state.minutes}\r\n                onChange={this.handleChange.bind(this)}\r\n              ></OsStepper>\r\n              <Text>Hours:</Text>\r\n              <OsStepper\r\n                min={0}\r\n                max={60}\r\n                step={1}\r\n                value={this.state.hours}\r\n                onChange={this.handleChange1.bind(this)}\r\n              ></OsStepper>\r\n              <Text>Days:</Text>\r\n              <OsStepper\r\n                min={0}\r\n                max={365}\r\n                step={1}\r\n                value={this.state.days}\r\n                onChange={this.handleChange2.bind(this)}\r\n              ></OsStepper>\r\n              <OsButton className='b1' onClick={this.closeToast} shape='round' bdColor='#00FFFF' bgColor='#00FFFF'>Close</OsButton>\r\n              <OsButton className='b2' shape='round' bdColor='#00FFFF' bgColor='#00FFFF' onClick={this.submitData}>Submit</OsButton>\r\n            </View>\r\n          )}\r\n      </View>\r\n    )\r\n  }\r\n}\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.jsx\"\nvar config = {\"navigationBarTitleText\":\"Bilibili\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/bilibili/index', {root:{cn:[]}}, config || {}))\n\n\n"],"names":[],"sourceRoot":""}