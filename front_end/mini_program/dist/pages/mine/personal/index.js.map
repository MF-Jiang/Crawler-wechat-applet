{"version":3,"file":"pages/mine/personal/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAsBA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://taro_bilibili/._src_pages_mine_personal_index.jsx","webpack://taro_bilibili/./src/pages/mine/personal/index.jsx?eba6"],"sourcesContent":["import { Component } from 'react'\r\nimport { View, Text, Input } from '@tarojs/components'\r\nimport Taro from \"@tarojs/taro\"\r\n\r\nimport './index.scss'\r\n\r\nexport default class Index extends Component {\r\n  componentDidMount() {\r\n    let cookie = Taro.getStorageSync('Cookies')\r\n    Taro.request({\r\n      url: 'http://127.0.0.1:5000/api/auth/user_menu',\r\n      header: {\r\n        'Cookie': cookie,\r\n        'content-type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n\r\n      success: (res) => {\r\n        this.setState({ username: res.data.username, time: res.data.time, email: res.data.email })\r\n        console.log(res.data)\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() { }\r\n\r\n  componentDidShow() { }\r\n\r\n  componentDidHide() { }\r\n  submit_Data = () => {\r\n    let cookie = Taro.getStorageSync('Cookies')\r\n    Taro.request({\r\n      url: 'http://127.0.0.1:5000/api/auth/user_menu/change',\r\n      header: {'Cookie': cookie,\r\n        'content-type': 'application/json'\r\n      },\r\n      method: \"POST\",\r\n      data: {\r\n        \"username\": this.username.value,\r\n        \"email\": this.email.value\r\n      },\r\n      success: () => {\r\n        Taro.switchTab({\r\n          url: '/pages/mine/user'\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  state = { username: \"\", time: \"\", email: \"\" }\r\n  render() {\r\n    return (\r\n\r\n      <View className='container'>\r\n        <View id='developerView'>\r\n          <View class='developerItemView'>\r\n            <View>Username:</View>\r\n            <Input type='text'\r\n            style={{\r\n              width: '100%',\r\n              overflow: 'hidden',\r\n              textOverflow: 'ellipsis',\r\n              whiteSpace: 'nowrap',\r\n            }} value={this.state.username} placeholder={this.state.username} placeholderStyle='color:black' ref={c => this.username = c}/>\r\n          </View>\r\n\r\n\r\n          <View className='developerItemView'>\r\n            <View>Join Time:</View>\r\n            <Text>{this.state.time}</Text>\r\n          </View>\r\n          <View className='developerItemView'>\r\n            <View>Email:</View>\r\n            <Input type='text' value={this.state.email} style={{\r\n                width: '100%',\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n              }} placeholder={this.state.email} placeholderStyle='color:black' ref={c => this.email = c}/>\r\n          </View>\r\n          <View className='register-btn' onClick={this.submit_Data}>\r\n            Confirm change\r\n          </View>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.jsx\"\nvar config = {\"navigationBarTitleText\":\"Personal info\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/mine/personal/index', {root:{cn:[]}}, config || {}))\n\n\n"],"names":[],"sourceRoot":""}